{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ai/run.js","webpack:///./src/ai/processor.js","webpack:///./src/components/results/words-left-tooltip.jsx","webpack:///./src/components/results/stats-row/cell.js","webpack:///./src/app.jsx","webpack:///./src/extensions.js","webpack:///./src/ai/index.js","webpack:///./src/components/error-boundary.jsx","webpack:///./src/components/settings/setting-toggle.jsx","webpack:///./src/components/settings/index.js","webpack:///./src/components/settings/settings.jsx","webpack:///./src/components/settings/inputs.js","webpack:///./src/components/settings/exclude-previous-toggle.jsx","webpack:///./src/components/settings/random-toggle.jsx","webpack:///./src/components/settings/any-first-word-toggle.jsx","webpack:///./src/components/settings/decisive-threshold.jsx","webpack:///./src/components/settings/hard-mode-toggle.jsx","webpack:///./src/components/settings/hide-text-toggle.jsx","webpack:///./src/components/settings/autoplay-toggle.jsx","webpack:///./src/components/settings/show-words-left-toggle.jsx","webpack:///./src/components/settings/shuffle-toggle.jsx","webpack:///./src/components/settings/whole-dictionary-toggle.jsx","webpack:///./src/components/settings/try-to-lose-toggle.jsx","webpack:///./src/components/settings/prioritize-unique-letters.jsx","webpack:///./src/components/share-button.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/components/word-input/index.js","webpack:///./src/components/word-input/word-input.jsx","webpack:///./src/hooks/useCurrentPuzzleWord.js","webpack:///./src/hooks/useTimedEffect.js","webpack:///./src/components/word-input/button.jsx","webpack:///./src/components/results/index.js","webpack:///./src/components/results/results.jsx","webpack:///./src/components/results/failed-row.jsx","webpack:///./src/components/results/result-row.jsx","webpack:///./src/components/results/stats-row/index.js","webpack:///./src/components/results/stats-row/stats-row.jsx","webpack:///./src/components/results/stats-row/words-left-cell.jsx","webpack:///./src/hooks/useDictionary.js","webpack:///./src/hooks/useSettings.js","webpack:///./src/components/settings/icon-tooltip.jsx","webpack:///./src/helpers.js","webpack:///./src/contexts/word-context.js","webpack:///./src/ai/helpers.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","run","todaysWord","options","random","preferDecisive","maxGuesses","MAX_GUESSES","print","onResult","decisiveThreshold","isPuzzleWord","doShuffle","forceHardMode","excludePrevious","wholeDictionary","tryToLose","prioritizeUniqueLetters","lj","ljs","lje","ljn","printMethods","dictionaries","nextTry","processor","anyFirstWord","indexOf","hardMode","wordLen","toUpperCase","tw","tryWord","SUCCESS","GREEN","repeat","guessResults","lucky","luckyAt","Infinity","Processor","init","words","padLength","shuffled","useDecisive","unknown","sortByWordRank","includes","allWords5","word","getDecisiveWord","chooseRandom","last","Error","guessed","add","join","filter","w","sort","wordsLeft","remainingWords","next","wordsRemaining","toString","padStart","Math","min","shuffle","fivePercent","comp","runs","map","nums","num","luckWords","loseNum","winNum","luckOrFail","max","avg","constructor","WORD_LEN","this","known","newFilledArray","prioritizeUnqiueLetters","turn","Set","decisiveGuesses","allWords","puzzleWords","sortAll","_sortLetterFrequency","_sortLetterPerPositionFrequency","_sortUniqueLetters","arr","forEach","GRAY","yellows","x","YELLOW","noneOfThese","has","_","some","getUnknown","knownCounts","getLetterCounts","yellowGreenCounts","c2","r2","delete","replace","every","possibleLetters","flatMap","countUsefulLetters","size","a","b","counts","ranks","calcRanks","calcRank","reduce","nextWords","unique","uniqueCompValue","fromEntries","entries","e","children","placement","open","setOpen","useState","ClickAwayListener","onClickAway","Container","Tooltip","enterTouchDelay","leaveTouchDelay","arrow","title","More","ContentWrapper","onClick","Arrow","ArrowDropDownIcon","className","showLines","setShowLines","showMore","WordSpans","Link","Items","MUILink","Cell","shouldForwardProp","color","AppContainer","ButtonsContainer","EMPTY_RESULTS","App","results","setResults","setWord","settings","setSettings","hasResult","curPuzzleNum","getCurrentPuzzleNumber","puzzleNumber","wordCtx","AppWrapper","Provider","onChange","onSubmit","async","Promise","sleep","ReactDOM","render","document","getElementById","roundTo","round","randInt","minOrMax","maxOrUndefined","range","floor","sum","vals","flat","v","product","_max","_min","Number","isNaN","NaN","Array","eachAnd","cb","inPlace","idx","sIdx","joinNL","set","ms","res","setTimeout","getOwnPropertyDescriptors","String","args","from","splitNL","split","mapObject","obj","fn","global","val","console","log","count","sep","ErrorBoundary","React","Component","props","super","state","error","componentDidCatch","errorInfo","message","stack","FormControlLabel","MuiFormControlLabel","setting","label","disabledWhen","forceChecked","FormGroup","control","Switch","disabled","checked","Drawer","MUIDrawer","H2","H3","as","Settings","memo","IconButton","onClose","anchor","inputs","group","list","Fragment","Input","isEqual","Autoplay","HideText","ShowWordsLeft","HardMode","WholeDictionary","ExcludePrevious","PrioritizeUniqueLetters","Shuffle","Random","DecisiveThreshold","AnyFirstWord","TryToLose","Slider","MuiSlider","Gray","handleChange","useCallback","localStorage","setItem","Typography","marks","valueLabelDisplay","valueLabelFormat","useContext","wordContext","getData","navigator","canShare","share","then","catch","text","gr","url","webpackContext","req","id","webpackContextResolve","code","keys","resolve","UNPLAY_SETTINGS","lastPlay","Cookies","endOf","hideText","platform","userAgent","MUIInput","fontWeight","setCookies","Date","now","played","setPlayed","inputRef","useRef","currentPuzzle","playedToday","runCurrent","useEffect","values","pick","current","autoplay","diff","valid","target","trim","handleKeyDown","select","handleSubmit","input","ref","maxLength","onFocus","onKeyDown","onClear","querySelector","focus","onSetToCurrent","playedWord","puzzleNum","setPuzzleNum","startOf","time","deps","handle","clearTimeout","StyledButton","MUIButton","ResultContainer","Header","guess","FailedRow","ResultRow","StatsRow","Row","hiddenText","WordsLeftContainer","showWordsLeft","ArrowContainer","ResultRowContainer","ResultItem","WordsLeftTooltip","bgColors","HardModeIcon","HardModeCell","LuckyCell","WordsLeftCell","cell","getList","fetch","txt","setVal","all","lowLetterWords","_setSettings","commonDupes","JSON","parse","stringify","MuiTooltip","icon","moment","require","_WORDLE_DAY_0","subtract","clone","getPuzzleNumber","puzzleWordIdx","puzzleDay","createContext","noop","k","fill"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([259,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { printMethods, tryWord } from './helpers';\nimport Processor from './processor';\n\nconst run = (\n  todaysWord,\n  options = {}\n) => {\n  const {\n    random = false,\n    preferDecisive = false,\n    maxGuesses = MAX_GUESSES,\n    print = true,\n    onResult = () => {},\n    decisiveThreshold = 2,\n    isPuzzleWord = false,\n    doShuffle = true,\n    forceHardMode = false,\n    excludePrevious,\n    wholeDictionary = false,\n    tryToLose = false,\n    prioritizeUniqueLetters = true,\n  } = options\n\n  const { l, lj, ljs, lje, ljn } = printMethods(print)\n\n  let {\n    dictionaries,\n    nextTry = null,\n    processor = null,\n    anyFirstWord = false,\n  } = options\n\n  if (wholeDictionary) {\n    dictionaries[0] = dictionaries[1].slice()\n  } else if (isPuzzleWord && excludePrevious) {\n    dictionaries = [\n      dictionaries[0].slice(\n        dictionaries[0].indexOf(todaysWord) - 1\n      ),\n      dictionaries[1],\n    ]\n  }\n\n  let hardMode = true\n\n  const wordLen = todaysWord.length\n\n  todaysWord = todaysWord.toUpperCase()\n\n  const tw = tryWord.bind(null, todaysWord)\n\n  const SUCCESS = GREEN.repeat(wordLen)\n  const guessResults = []\n\n  let lucky = false\n  let luckyAt = Infinity\n\n  l('Word: ' + todaysWord)\n\n  processor = processor || Processor.init(\n    dictionaries,\n    isPuzzleWord,\n    prioritizeUniqueLetters,\n    wordLen,\n    maxGuesses\n  )\n\n  let words = processor.words\n  let padLength = 0\n\n  let shuffled = false;\n  l('Guesses:')\n\n  for (let i = 0; ; i++) {\n    i === maxGuesses && l(\n      '-'.repeat(wordLen * 3 + 2) + ' | Failed ☠️'\n    )\n\n    anyFirstWord = anyFirstWord && !i\n\n    const useDecisive =\n      !nextTry &&\n      !random &&\n      !anyFirstWord &&\n      !forceHardMode &&\n      !tryToLose &&\n      i < maxGuesses - 1 && (\n        preferDecisive\n          ? words.length > 1\n          : processor.unknown <= decisiveThreshold &&\n            words.length > maxGuesses - i\n      )\n\n    if (anyFirstWord) {\n      processor.sortByWordRank(\n        prioritizeUniqueLetters, true\n      )\n      hardMode = dictionaries[0]\n        .includes(Processor.allWords5[0])\n    }\n\n    const word =\n      nextTry ? nextTry :\n      useDecisive ? processor.getDecisiveWord(i) :\n      random ? words.chooseRandom() :\n      anyFirstWord ? Processor.allWords5[0] :\n      tryToLose ? words.last :\n      words[0]\n\n    nextTry = null\n\n    if (useDecisive) {\n      lucky = false\n      luckyAt = Infinity\n      shuffled = false\n      hardMode = hardMode && words.includes(word)\n    }\n\n    if (!word) {\n      throw new Error(\n        'No word returned, likely from getDecisiveWord()'\n      )\n    }\n\n    processor.guessed.add(word)\n\n    const result = tw(word);\n    guessResults.push([ word, result ])\n\n    if (result.join('') === SUCCESS) {\n      ljs(\n        word,\n        SUCCESS,\n        '|',\n        i < maxGuesses\n          ? 'Success!'\n          : 'Done',\n        lucky\n          ? i < maxGuesses\n            ? 'lucky'\n            : 'unlucky'\n          : ''\n      )\n\n      if (words.length < 21) {\n        l(words)\n      }\n      \n      words = words.filter(w => w !== word).sort()\n\n      return {\n        guessResults,\n        lucky,\n        luckyAt,\n        wordsLeft: words.length,\n        hardMode,\n        remainingWords: words,\n      }\n    }\n\n    words = processor.next(word, result)\n    guessResults.last.push(words.length, words)\n\n    onResult({\n      guessResults,\n      lucky,\n      wordsLeft: words.length,\n      hardMode,\n      wordsRemaining: words\n    })\n\n    !i && (padLength = words.length.toString().length)\n\n    ljs(\n      word,\n      result.join(''),\n      '|',\n      words.length.toString().padStart(padLength),\n      words.length === 1 ? 'word' : 'words',\n      'left'\n    )\n\n    if (!words.includes(todaysWord)) {\n      l('Removed today\\'s word 😵')\n      throw new Error('Removed today\\'s word 😵')\n    }\n\n    if (!words.length) {\n      l('No words? 🤨')\n      throw new Error('No words? 🤨')\n    }\n\n    if (!shuffled && processor.unknown === 1) {\n      shuffled = true\n      if (words.length >= maxGuesses - i) {\n        lucky = true\n        luckyAt = Math.min(luckyAt, i + 1)\n      }\n\n      doShuffle && words.shuffle()\n    } else if (!shuffled) {\n      words = processor.sortByWordRank()\n    }\n  }\n};\n\nexport default run;\n\nexport const runAll = dictionaries => {\n  const words = dictionaries[0]\n    //.slice(Math.floor(.55 * dictionaries[0].length))\n\n  const fivePercent = words.length / 20\n  let next = fivePercent\n  let comp = 0\n  const runs = words\n    .map((w, i) => {\n      if (i > next) {\n        while (i > next) {\n          next += fivePercent\n          comp += 5\n        }\n\n        l(`${comp}%`)\n      }\n\n      return [\n        w,\n        run(w, {\n          dictionaries,\n          print: false,\n          doShuffle: false,\n          isPuzzleWord: true,\n        })\n      ]\n    })\n\n  const nums = runs.map(([w, r]) => {\n    const num = r.guessResults.length\n\n    if (r.lucky) {\n      l(`${w} ${num}/6`)\n      let luckWords = num - r.luckyAt + r.wordsLeft\n      let loseNum = r.luckyAt - 6 + luckWords\n      let winNum = 6 - r.luckyAt\n\n      l(`Win%: ${winNum / (winNum + loseNum) * 100}`)\n    } else if (num > 6) {\n      l(`${w} ${num}/6`)\n      l('Deterministic failure')\n    }\n\n    return num\n  })\n\n  const luckOrFail =\n    runs.filter(([, r], i) =>\n      r.lucky || nums[i] > 6\n    ).length\n\n  l('')\n  l(`Failed: ${nums.filter(n => n > 6).length}`)\n  l(`Lucky or failed: ${luckOrFail}`)\n  l(`Win%: ${\n    (nums.length - luckOrFail) / nums.length * 100\n  }`)\n  l(`Max: ${Math.max(...nums)}`)\n  l(`Mean: ${Math.avg(nums)}`)\n}","import _ from 'lodash';\nimport {\n  getLetterCounts,\n  newFilledArray,\n  printMethods\n} from './helpers';\nimport run from './run';\n\nexport default class Processor {\n  constructor(\n    words,\n    prioritizeUniqueLetters = true,\n    wordLen = WORD_LEN,\n    maxGuesses = MAX_GUESSES\n  ) {\n    this.words = words\n    this.known = newFilledArray(wordLen)\n    this.wordLen = wordLen\n    this.maxGuesses = maxGuesses\n    this.prioritizeUnqiueLetters =\n      prioritizeUniqueLetters\n    this.turn = 1\n    this.guessed = new Set()\n    this.decisiveGuesses = new Set()\n    this.print = 3\n  }\n\n  static allWords = []\n  static wordLen = WORD_LEN\n\n  static get allWords5() {\n    return this.allWords[this.wordLen]\n  }\n\n  static set allWords5(value) {\n    return this.allWords[this.wordLen] = value\n  }\n\n  static init(\n    [puzzleWords, allWords],\n    isPuzzleWord,\n    prioritizeUniqueLetters = true,\n    wordLen = WORD_LEN,\n    maxGuesses = MAX_GUESSES\n  ) {\n    this.wordLen = wordLen\n    this.allWords5 = this.allWords5 || [...allWords]\n\n    const dict = isPuzzleWord\n      ? puzzleWords\n      : this.allWords5\n\n    const p = new this(\n      [...dict],\n      prioritizeUniqueLetters,\n      wordLen,\n      maxGuesses\n    )\n\n    p.sortByWordRank(prioritizeUniqueLetters)\n    return p\n  }\n\n  get l() {\n    return printMethods(this.print > 0).l\n  }\n\n  sortByWordRank(\n    prioritizeUniqueLetters =\n      this.prioritizeUnqiueLetters,\n    sortAll = false\n  ) {\n    this._sortLetterFrequency(sortAll)\n    this._sortLetterPerPositionFrequency(sortAll)\n    \n    if (prioritizeUniqueLetters) {\n      this._sortUniqueLetters(\n        sortAll ? Processor.allWords5 : this.words\n      )\n    }\n    \n    return sortAll ? Processor.allWords5 : this.words\n  }\n\n  get unknown() {\n    return this.known.filter(c => !c).length\n  }\n\n  next(word, result) {\n    let { words, known, unknown, wordLen } = this\n\n    const arr = result.map((c, i) => [word[i], c])\n\n    arr.forEach(([c, r], i) => {\n      if (r === GREEN) {\n        known[i] = c\n        words = words.filter(w => w[i] === c)\n      } else if (r === GRAY) {\n        words = words.filter(w => w[i] !== c)\n      }\n    })\n\n    const yellows = new Set(arr\n      .filter(x => x[1] === YELLOW)\n      .map(x => x[0])\n    )\n\n    const noneOfThese = arr\n      .filter(([c, r], i) =>\n        r === GRAY &&\n        !yellows.has(c) &&\n        !arr.slice(i + 1)\n          .map(x => x[0])\n          .filter((_, i) => !known[i])\n          .includes(c)\n      )\n      .map(x => x[0])\n\n    words = words.filter(w =>\n      !noneOfThese.some(c =>\n        this.getUnknown(w).includes(c)\n      )\n    )\n\n    const knownCounts = getLetterCounts(known)\n    const yellowGreenCounts = getLetterCounts(\n      arr\n        .filter(x => x[1] === YELLOW || x[1] == GREEN)\n        .map(x => x[0])\n    )\n\n    arr.forEach(([c, r], i) => {\n      if (r !== YELLOW) {\n        return\n      }\n\n      words = words.filter(w => w[i] !== c)\n      \n      if (\n        arr.some(([c2, r2]) => \n          c2 === c && r2 === GRAY)\n      ) {\n        words = words.filter(w => \n          getLetterCounts(w)[c] <= \n            yellowGreenCounts[c]\n        )\n      }\n\n      if (!knownCounts[c]) {\n        words = words.filter(w => w.includes(c))\n      } else if (\n        yellowGreenCounts[c] > knownCounts[c]\n      ) {\n        this.decisiveGuesses.delete(c)\n\n        words = words.filter(w => {\n          for (let i = 0; i < knownCounts[c]; i++) {\n            w = w.replace(c, '_')\n          }\n\n          return w.includes(c)\n        })\n      }\n    })\n\n    for (let i = 0; i < wordLen; i++) {\n      if (known[i]) {\n        continue;\n      }\n\n      if (words.every(w => w[i] === words[0][i])) {\n        known[i] = words[0][i]\n      }\n    }\n\n    this.words = words\n    return words\n  }\n\n  getUnknown(word) {\n    return word.filter((_, i) => !this.known[i])\n  }\n\n  getDecisiveWord(turn) {\n    const {\n      words,\n      maxGuesses,\n      guessed,\n      decisiveGuesses,\n      wordLen,\n      known,\n      l,\n    } = this\n\n    const knownCounts = getLetterCounts(known)\n    const allWords = Processor.allWords5\n\n    if (turn >= maxGuesses - 1) {\n      throw 'Cannot get remaining letters on last guess'\n    }\n\n    const possibleLetters = new Set(\n      words.flatMap(w => this.getUnknown(w))\n    )\n\n    const countUsefulLetters = w =>\n      new Set(w.filter(c =>\n        possibleLetters.has(c) &&\n        !decisiveGuesses.has(c) &&\n        getLetterCounts(w)[c] > (knownCounts[c] || 0)\n      )).size\n\n    let decisive = allWords\n      .filter(w =>\n        !guessed.has(w) &&\n        w.some(c => possibleLetters.has(c))\n      )\n      .map(w => [w, countUsefulLetters(w)])\n      .filter(x => x[1])\n      .sort((a, b) => b[1] - a[1])\n      .filter((x, _, a) => x[1] === a[0][1])\n      .map(x => x[0])\n\n    if (SHUFFLE_DECISIVE) {\n      decisive.shuffle()\n    }\n\n    if (GO_BALLS_DEEP) {\n      if (words.length < 15) {\n        decisive = decisive\n          .map((g, i) => {\n            const val = words.reduce((a, w) => {\n              const p = _.cloneDeep(this);\n              p.print = this.print - 1\n\n              const {\n                guessResults,\n                lucky,\n                wordsLeft\n              } = run(w, {\n                processor: p,\n                print: false,\n                nextTry: g\n              })\n\n              return a + lucky ? 1 / wordsLeft : 1\n            }, 0)\n\n            return [ g, val ]\n          })\n          .sort((a, b) => b[1] - a[1])\n          .map(x => x[0])\n      }\n    }\n\n    const word = decisive[0]\n\n    if (!word) {\n      return null\n    }\n\n    word.forEach(c => decisiveGuesses.add(c))\n    return word\n  }\n\n  _sortLetterFrequency(sortAll = false) {\n    const { words } = this\n    const allWords = Processor.allWords5\n    const counts = {}\n\n    words.forEach(w =>\n      w.forEach(\n        c => counts[c] = (counts[c] || 0) + 1\n      )\n    )\n\n    const ranks = calcRanks(counts)\n\n    const calcRank = w =>\n      w.reduce(\n        (a, c) => a + ranks[c],\n        0\n      )\n\n    const nextWords =\n      (sortAll ? allWords : words)\n        .map(w => [w, calcRank(w)])\n        .sort((a, b) => a[1] - b[1])\n        .map(x => x[0])\n\n    if (sortAll) {\n      return Processor.allWords5 = nextWords\n    } else {\n      return this.words = nextWords\n    }\n  }\n\n  _sortLetterPerPositionFrequency(sortAll = false) {\n    const { words, wordLen } = this\n    const allWords = Processor.allWords5\n    const counts =\n      newFilledArray(wordLen, () => ({}))\n\n    words.forEach(w => w.forEach((c, i) =>\n      counts[i][c] = (counts[i][c] || 0) + 1\n    ))\n\n    const ranks = counts.map(calcRanks)\n    const calcRank = w => w.reduce(\n      (a, c, i) => a + ranks[i][c],\n      0\n    )\n\n    const nextWords =\n      (sortAll ? allWords : words)\n        .map(w => [w, calcRank(w)])\n        .sort((a, b) => a[1] - b[1])\n        .map(x => x[0])\n\n    if (sortAll) {\n      return Processor.allWords5 = nextWords\n    } else {\n      return this.words = nextWords\n    }\n  }\n\n  _sortUniqueLetters(words = this.words) {\n    const unique = new Set(\n      words.filter(w =>\n        !w.some((l, i, a) => a.includes(l, i + 1))\n      )\n    )\n\n    const uniqueCompValue = w => - unique.has(w)\n\n    return words.sort((a, b) =>\n      uniqueCompValue(a) - uniqueCompValue(b)\n    )\n  }\n}\n\nconst calcRanks = counts =>\n  Object.fromEntries(\n    Object.entries(counts)\n      .sort((a, b) => b[1] - a[1])\n      .map((e, i) => [e[0], i])\n  )\n","import React, { useState } from 'react'\nimport {\n  ClickAwayListener,\n  Tooltip,\n  Link as MUILink,\n  Portal,\n} from '@mui/material'\nimport ArrowDropDownIcon \n  from '@mui/icons-material/ArrowDropDown';\nimport styled from '@emotion/styled'\n\nexport const WordsLeftTooltip = ({ \n  children,\n  placement,\n  words,\n}) => {\n  const [open, setOpen] = useState(false)\n  if (!words?.length) {\n    return <ContentWrapper>{children}</ContentWrapper>\n  }\n  \n  return <ClickAwayListener\n    onClickAway={() => setOpen(false)}\n  >\n    <Container>\n      <Tooltip\n        open={open}\n        placement={placement}\n        enterTouchDelay={0}\n        leaveTouchDelay={24 * 60 * 60 * 1000}\n        arrow\n        title={<More words={words} />}\n      >\n        <ContentWrapper onClick={() => setOpen(true)}>\n          {typeof children === 'function'\n            ? children(<Arrow />)\n            : <>\n                {children}\n                <Arrow />\n              </>}\n        </ContentWrapper>\n      </Tooltip>\n    </Container>\n  </ClickAwayListener>\n}\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Container = styled.div`\n  position: relative;\n  flex: 1;\n`\n  \nconst Arrow = styled(ArrowDropDownIcon)`\n  margin-left: auto;\n`\n\nconst More = styled(({ \n  words, \n  className, \n  children,\n}) => {\n  const [showLines, setShowLines] = useState(5)\n  const showMore = words.length > (showLines + 1) * 5\n  \n  if (showMore) {\n    words = words.slice(0, showLines * 5)\n  }\n\n  return <div className={className}>\n    <WordSpans words={words} />\n    {showMore && <>\n      {'\\n'}\n      <Link onClick={() => setShowLines(n => n + 25)}>\n        More...\n      </Link>\n    </>}\n  </div>\n})`\n  white-space: pre-line;\n`\n\nconst Items = styled.div`\n  font-family: 'menlo-regular', consolas, monospace;\n  display: inline-grid;\n  grid-template-columns: repeat(5, 1fr);\n  gap: 4px 8px;\n  \n  &:not(:last-child) {\n    margin-bottom: 2px;\n  }\n`\n\nconst WordSpans = ({ words }) => <Items>\n  {words.map(w => <span key={w}>{w}</span>)}\n</Items>\n\nconst Link = styled(MUILink)`\n  color: #ccc;\n`","import styled from '@emotion/styled'\n\nexport const Cell = styled('div', {\n  shouldForwardProp: p => p !== 'color',\n})`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  flex: 1;\n  position: relative;\n  \n  & > :first-child {\n    ${({ color }) => ({ color })};\n    font-size: 30px;\n  }\n  \n  & > :nth-child(2) {\n    font-size: 20px;\n    text-align: center;\n  }\n`\n","import './extensions'\nimport React, {\n  Fragment,\n  useEffect,\n  useState,\n  useRef,\n} from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from '@emotion/styled'\nimport run, { runAll } from './ai'\nimport ErrorBoundary \n  from './components/error-boundary.jsx'\nimport Settings from './components/settings'\nimport ShareButton from './components/share-button.jsx'\nimport WordInput from './components/word-input'\nimport Results from './components/results'\nimport useDictionary from './hooks/useDictionary'\nimport useSettings from './hooks/useSettings'\nimport wordContext from './contexts/word-context'\nimport { getCurrentPuzzleNumber } from './helpers'\n//import usePrevState from './hooks/usePrevState'\n\nconst AppContainer = styled('div')`\n  font-family: sans-serif;\n  max-width: 412px;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: absolute;\n  right: 0;\n  top: 0;\n  margin: 8px;\n`\n\nconst EMPTY_RESULTS = {\n  guessResults: []\n}\n\nconst App = () => {\n  const [results, setResults] = useState(EMPTY_RESULTS)\n\n  const [word, setWord] = useState('')\n  \n  const [settings, setSettings] = useSettings()\n  const dictionaries = useDictionary()\n  const [puzzleWords, allWords] = dictionaries\n\n  if (RUN_ALL) {\n    useEffect(() => {\n      if (puzzleWords.length) {\n        runAll(dictionaries)\n      }\n    }, [dictionaries])\n  }\n\n  const handleSubmit =\n    async ({ word, isPuzzleWord }) => {\n      setWord(word)\n      await Promise.sleep()\n      setResults(\n        run(word, {\n          dictionaries,\n          isPuzzleWord,\n          onResult: setResults,\n          ...settings,\n        })\n      )\n    }\n\n  const hasResult = !!results.guessResults.length\n  \n  const isPuzzleWord = \n    !!word && puzzleWords.includes(word)\n  const curPuzzleNum = getCurrentPuzzleNumber()\n  const puzzleNumber =\n    !isPuzzleWord ? null :\n    puzzleWords.indexOf(word) > curPuzzleNum ? '???' :\n    puzzleWords.indexOf(word)\n  \n  const wordCtx = {\n    word,\n    puzzleWords,\n    allWords,\n    puzzleNumber,\n    results,\n  }\n\n  return <AppWrapper>\n    <wordContext.Provider value={wordCtx}>\n      <ButtonsContainer>\n        <ShareButton />\n        <Settings\n          settings={settings}\n          onChange={setSettings}\n          hasResult={hasResult}\n        />\n      </ButtonsContainer>\n      <WordInput\n        onSubmit={handleSubmit}\n        settings={settings}\n      />\n      <Results settings={settings} />\n    </wordContext.Provider>\n  </AppWrapper>\n}\n\nconst AppWrapper = ({ children }) =>\n  <ErrorBoundary>\n    <AppContainer>\n      {children}\n    </AppContainer>\n  </ErrorBoundary>\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","Math.roundTo = (n, d) => Math.round(n * 10 ** d) / d\n  \nMath.randInt = (minOrMax, maxOrUndefined) => {\n  const [min, max] = maxOrUndefined == null\n    ? [0, minOrMax]\n    : [minOrMax, maxOrUndefined + 1]\n  const range = max - min\n  return Math.floor(Math.random() * range) + min\n}\n\nMath.sum = (...vals) =>\n  vals.flat().reduce((s, v) => s + v, 0)\nMath.avg = (...vals) => Math.sum(...vals) / vals.length\nMath.product = (...vals) =>\n  vals.flat().reduce((p, v) => p * v, 1)\n  \nconst _max = Math.max;\nconst _min = Math.min;\n\nMath.max = (...vals) =>\n  vals.flat().reduce((m, v) => \n    Number.isNaN(m) ? v : _max(m, v),\n    NaN)\n    \nMath.min = (...vals) =>\n  vals.flat().reduce((m, v) => \n    Number.isNaN(m) ? v : _min(m, v),\n    NaN)\n\nArray.prototype.eachAnd = function (cb) {\n  this.forEach(cb)\n  return this\n}\n\nArray.prototype.shuffle = function (inPlace = true) {\n  const arr = inPlace ? this : [...this]\n  return arr.eachAnd((_, idx) => {\n    const sIdx = Math.randInt(idx, arr.length - 1);\n    [arr[idx], arr[sIdx]] = [arr[sIdx], arr[idx]]\n  })\n}\n\nArray.prototype.chooseRandom = function () {\n  return this[Math.randInt(this.length)]\n}\n\nArray.prototype.joinNL = function () {\n  return this.join('\\n')\n}\n\nObject.defineProperty(\n  Array.prototype, \n  'last',\n  {\n    get() {\n      if (!this.length) {\n        return undefined\n      }\n      \n      return this[this.length - 1]\n    },\n    set(value) {\n      if (!this.length) {\n        throw new Error(\n          'Array must have at least one value to set \"last\"'\n        )\n      }\n      \n      return this[this.length - 1] = value\n    }\n  }\n)\n\nPromise.sleep = (ms = 0) =>\n  new Promise(res => setTimeout(res, ms))\n\nObject.entries(\n  Object.getOwnPropertyDescriptors(Array.prototype)\n)\n  .filter(([n, d]) =>\n    !(n in String.prototype) &&\n    typeof d.value === 'function'\n  )\n  .forEach(([n]) =>\n    String.prototype[n] = String.prototype[n] ||\n      function (...args) {\n        return Array.from(this)[n](...args)\n      }\n  )\n\nString.prototype.splitNL = function () {\n  return this.split(/\\r?\\n/)\n}\n  \nObject.mapObject = (obj, fn) =>\n  Object.fromEntries(Object.entries(obj).map(fn))\n  \nglobal.l = (val = '', ...vals) =>\n  console.log(val, ...vals)\n\nl.count = 0\nObject.defineProperty(l, 'x', {\n  get() {\n    l(++l.count)\n    return l.count\n  }\n})\n\nObject.defineProperty(global, 'dbg', {\n  get() {\n    return l.x\n  }\n})\n\nglobal.lj = (sep, ...args) => l(args.join(sep))\nglobal.ljs = lj.bind(null, ' ')\nglobal.lje = lj.bind(null, '')\nglobal.ljn = lj.bind(null, '\\n')","export * from './run'\nexport { default } from './run'\nexport * from './processor'","import React from 'react'\n\nexport default class ErrorBoundary \n  extends React.Component\n{\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n  }\n\n  render() {\n    const { error } = this.state\n    if (error) {\n      // You can render any custom fallback UI\n      return <>\n        <h1>{error.message || error}</h1>\n        <pre>{error.stack}</pre>\n      </>;\n    }\n\n    return this.props.children; \n  }\n}","import React from 'react'\nimport { \n  FormGroup, \n  FormControlLabel as MuiFormControlLabel, \n  Switch \n} from '@mui/material'\nimport styled from '@emotion/styled'\n\nconst FormControlLabel = styled(MuiFormControlLabel)`\n  margin-right: 0;\n`\n\nconst SettingToggle = ({\n  setting,\n  label,\n  settings,\n  onChange,\n  disabledWhen = () => false,\n  forceChecked = () => null,\n  ...props\n}) =>\n  <FormGroup>\n    <FormControlLabel\n      control={\n        <Switch\n          disabled={disabledWhen(settings)}\n          {...props}\n          checked={\n            forceChecked(settings) ?? settings[setting]\n          }\n          onChange={() => \n            onChange({ [setting]: !settings[setting] })\n          }\n        />\n      }\n      label={label}\n    />\n  </FormGroup>\n  \nexport default SettingToggle","export { Settings as default } from './settings.jsx'","import React, { useState, memo, Fragment } from 'react'\nimport { \n  IconButton, \n  Drawer as MUIDrawer\n} from '@mui/material'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport styled from '@emotion/styled'\nimport _ from 'lodash'\nimport inputs from './inputs'\n\nconst Drawer = styled(MUIDrawer)`\n  & .MuiDrawer-paper {\n    padding: .5rem 1rem;\n    overflow: visible;\n  }\n`\n\nconst H2 = styled.h2`\n  font-size: 1.3rem;\n  font-family: sans-serif;\n  margin: 6px 0 4px;\n`\n\nconst H3 = styled(props => <H2 as=\"h3\" {...props} />)`\n  font-size: 1.1rem;\n`\n\nexport const Settings = memo(\n  ({ onChange, settings }) => {\n    const [ open, setOpen ] = useState(false)\n    \n    const handleClick = () => setOpen(true)\n    const handleClose = () => setOpen(false)\n    \n    const props = { settings, onChange }\n    \n    return <>\n      <IconButton onClick={handleClick}>\n        <SettingsIcon />\n      </IconButton>\n      <Drawer\n        open={open}\n        onClose={handleClose}\n        anchor=\"right\"\n      >\n        <H2>Settings</H2>\n        {inputs.map(([group, list]) => \n          <Fragment key={group}>\n            <H3>{group}</H3>\n            {list.map(Input =>\n              <Input key={Input.name} {...props} />)}\n          </Fragment>\n        )}\n      </Drawer>\n    </>\n  },\n  _.isEqual\n)","import ExcludePrevious\n  from './exclude-previous-toggle.jsx'\nimport Random from './random-toggle.jsx'\nimport AnyFirstWord from './any-first-word-toggle.jsx'\nimport DecisiveThreshold \n  from './decisive-threshold.jsx'\nimport HardMode from './hard-mode-toggle.jsx'\nimport HideText from './hide-text-toggle.jsx'\nimport Autoplay from './autoplay-toggle.jsx'\nimport ShowWordsLeft\n  from './show-words-left-toggle.jsx'\nimport Shuffle from './shuffle-toggle.jsx'\nimport WholeDictionary\n  from './whole-dictionary-toggle.jsx'\nimport TryToLose from './try-to-lose-toggle.jsx'\nimport PrioritizeUniqueLetters\n  from './prioritize-unique-letters.jsx'\n\nexport default [\n  [\n    'Display',\n    [\n      Autoplay,\n      HideText,\n      ShowWordsLeft\n    ]\n  ],\n  [\n    'AI',\n    [\n      HardMode,\n      WholeDictionary,\n      ExcludePrevious,\n      PrioritizeUniqueLetters,\n      Shuffle,\n      Random,\n      DecisiveThreshold,\n      AnyFirstWord,\n      TryToLose,\n    ]\n  ]\n]","import React from 'react'\nimport styled from '@emotion/styled'\nimport SettingToggle from './setting-toggle.jsx'\nimport IconTooltip from './icon-tooltip.jsx'\n\nconst Container = styled.div`\n  display: flex\n`\n\nconst ExcludePreviousToggle = props => {\n  return <Container>\n    <SettingToggle\n      {...props}\n      setting=\"excludePrevious\"\n      label=\"Exclude previous puzzle words\"\n      disabledWhen={s => s.wholeDictionary}\n    />\n    <IconTooltip>\n      <p>\n        Exclude words that have already been used as puzzles from the list of possible words.\n      </p>\n    </IconTooltip>\n  </Container>\n}\n\nexport default ExcludePreviousToggle","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport InfoIcon from '@mui/icons-material/InfoOutlined' \nimport SettingToggle from './setting-toggle.jsx'\nimport IconTooltip from './icon-tooltip.jsx'\n\nconst Container = styled.div`\n  display: flex\n`\n\nconst RandomToggle = props => {\n  const [open, setOpen] = useState(false)\n  \n  return <Container>\n    <SettingToggle\n      {...props}\n      setting=\"random\"\n      label=\"Use random words\"\n      disabledWhen={s => s.tryToLose && s.forceHardMode}\n    />\n    <IconTooltip>\n      <p>\n        Choose words randomly from the list of remaining words, rather than attempting to choose the words with the most {GREEN} and {YELLOW} tiles.\n      </p>\n    </IconTooltip>\n  </Container>\n}\n  \nexport default RandomToggle","import React from 'react'\nimport SettingToggle from './setting-toggle.jsx'\n\nconst AnyFirstWordToggle = props =>\n  <SettingToggle\n    {...props}\n    setting=\"anyFirstWord\"\n    label=\"Use any word first\"\n    disabledWhen={s => \n      s.random || s.forceHardMode || s.wholeDictionary\n    }\n    forceChecked={\n      s =>\n        s.random || s.forceHardMode ? false :\n        s.wholeDictionary ? true :\n        null\n    }\n  />\n\nexport default AnyFirstWordToggle","import React, { useCallback } from 'react'\nimport { \n  FormGroup, \n  Typography, \n  Slider as MuiSlider,\n} from '@mui/material'\n\nimport styled from '@emotion/styled'\nimport IconTooltip from './icon-tooltip.jsx'\n\nconst Slider = styled(MuiSlider)`\n  width: 200px;\n  \n  & .MuiSlider-thumb {\n    z-index: 1300;\n  }\n`\n\nconst Gray = styled.p`\n  color: lightgray;\n`\n\nconst DecisiveThreshold = ({\n  onChange,\n  settings: { decisiveThreshold, random, forceHardMode },\n}) => {\n  const handleChange = useCallback(\n    (_, value) => {\n      localStorage.setItem('decisiveThreshold', value)\n      onChange({ decisiveThreshold: value })\n    },\n    [onChange]\n  )\n    \n  return <FormGroup>\n    <Typography>\n      Decisive guess threshold\n      <IconTooltip placement=\"top\">\n        <p>\n          When there are more words remaining than there are guesses and each word is equally likely, the AI will violate <i>Hard mode</i> and play an incorrect word in order to narrow down the possibilities for the unknown letters.\n        </p>\n        <p>\n          The threshold specifies at how many unknown letters to begin using these decisive guesses.\n        </p>\n        <Gray>\n          Yes, I need to figure out a better name for this.  Naming things is the hardest part of programming.\n        </Gray>\n      </IconTooltip>\n    </Typography>\n    <Slider\n      marks={!forceHardMode && !random}\n      min={1}\n      max={WORD_LEN}\n      value={\n        forceHardMode || random \n          ? 0 \n          : decisiveThreshold\n      }\n      valueLabelDisplay=\"auto\"\n      valueLabelFormat={\n        v => v === 1 \n          ? '1 unknown letter'\n          : `${v} unknown letters`\n      }\n      onChange={handleChange}\n      disabled={random || forceHardMode}\n    />\n  </FormGroup>\n}\n\nexport default DecisiveThreshold","import React from 'react'\nimport SettingToggle from './setting-toggle.jsx'\n\nconst HardModeToggle = props =>\n  <SettingToggle\n    {...props}\n    setting=\"forceHardMode\"\n    label=\"Enforce hard mode\"\n    disabledWhen={s => s.anyFirstWord || s.random}\n    forceChecked={\n      s =>\n        s.random ? true :\n        s.anyFirstWord ? false :\n        null\n    }\n  />\n\nexport default HardModeToggle","import React from 'react'\nimport SettingToggle from './setting-toggle.jsx'\n\nconst HideTextToggle = props =>\n  <SettingToggle\n    {...props}\n    setting=\"hideText\"\n    label=\"Hide text\"\n  />\n\nexport default HideTextToggle","import React from 'react'\nimport SettingToggle from './setting-toggle.jsx'\n\nconst AutoplayToggle = props =>\n  <SettingToggle\n    {...props}\n    setting=\"autoplay\"\n    label=\"Autoplay today's word\"\n  />\n  \nexport default AutoplayToggle","import React from 'react'\nimport SettingToggle from './setting-toggle.jsx'\n\nconst ShowWordsLeftToggle = props =>\n  <SettingToggle\n    {...props}\n    setting=\"showWordsLeft\"\n    label=\"Show words left\"\n  />\n  \nexport default ShowWordsLeftToggle","import React from 'react'\nimport SettingToggle from './setting-toggle.jsx'\n\nconst ShuffleToggle = props =>\n  <SettingToggle\n    {...props}\n    setting=\"doShuffle\"\n    label=\"Shuffle equally likely words\"\n    disabledWhen={s => s.random}\n    forceChecked={s => s.random ? true : null}\n  />\n  \nexport default ShuffleToggle","import React from 'react'\nimport SettingToggle from './setting-toggle.jsx'\n\nconst WholeDictionaryToggle = props =>\n  <SettingToggle\n    {...props}\n    setting=\"wholeDictionary\"\n    label=\"Use whole dictionary for Wordle puzzles\"\n    disabledWhen={s => s.excludePrevious}\n  />\n  \nexport default WholeDictionaryToggle","import React from 'react'\nimport styled from '@emotion/styled'\nimport SettingToggle from './setting-toggle.jsx'\nimport IconTooltip from './icon-tooltip.jsx'\n\nconst Container = styled.div`\n  display: flex\n`\n\nconst TryToLoseToggle = props => {\n  return <Container>\n    <SettingToggle\n      {...props}\n      setting=\"tryToLose\"\n      label=\"Try to lose\"\n      disabledWhen={s => s.random || !s.forceHardMode}\n      forceChecked={s => !s.forceHardMode ? false : null}\n    />\n    <IconTooltip>\n      <p>\n        Use the least helpful word from the list of remaining words, in order to check if it's even possible to lose when guessing a word.\n      </p>\n      <p>\n        <i>Enforce hard mode</i> must be enabled to use this setting.\n      </p>\n    </IconTooltip>\n  </Container>\n}\n\nexport default TryToLoseToggle","import React from 'react'\nimport styled from '@emotion/styled'\nimport SettingToggle from './setting-toggle.jsx'\nimport IconTooltip from './icon-tooltip.jsx'\n\nconst Container = styled.div`\n  display: flex\n`\n\nconst PrioritizeUniqueLettersToggle = props => {\n  return <Container>\n    <SettingToggle\n      {...props}\n      setting=\"prioritizeUniqueLetters\"\n      label=\"Prioritize unique letters\"\n      disabledWhen={s => s.random || s.tryToLose}\n      forceChecked={\n        s =>\n          s.random ? false :\n          s.tryToLose ? true :\n          null\n      }\n    />\n    <IconTooltip>\n      <p>\n        Choose words with the most unique letters first.  This can have both positive and negative effects.  Typically, ruling in or out the most letters at once rules out the most words.\n      </p>\n      <p>However, consider <code>SALAD</code>.  The AI will reduce the list of words down to three: <code>SALAD</code>, <code>SALSA</code>, and <code>SALVO</code>.  If this setting is enabled, it will choose <code>SALVO</code> because the other two have two A's--non-unique letters.  Once it determines that <code>SALVO</code> is incorrect, it does not know which of the remaining two words it is.  If it had chosen either <code>SALAD</code> or <code>SALSA</code> and had been wrong, it would know which word is right.\n      </p>\n    </IconTooltip>\n  </Container>\n}\n\nexport default PrioritizeUniqueLettersToggle","import React, { useContext } from 'react'\nimport ShareIcon from '@mui/icons-material/Share'\nimport { IconButton } from '@mui/material'\nimport { getCurrentPuzzleNumber } from '../helpers'\nimport wordContext from '../contexts/word-context'\n\nconst ShareButton = () => {\n  const {\n    results: { guessResults: r, hardMode },\n    puzzleNumber,\n  } = useContext(wordContext)\n  \n  const data = getData(r, hardMode, puzzleNumber)\n\n  return r.length && navigator.canShare?.(data)\n    ? <IconButton\n        onClick={() =>\n          navigator.share(data)\n            .then(() => l('success'))\n            .catch(e => l(e.message))\n        }\n      >\n        <ShareIcon />\n      </IconButton>\n    : null\n}\n\nexport default ShareButton\n\nconst getData = (r, hardMode, puzzleNumber) => ({\n  text: `Wordle ${puzzleNumber} ${\n    r.length > MAX_GUESSES ? 'X' : r.length\n  }/6${\n    hardMode ? '*' : ''\n  }\n\n${r.slice(0, 6).map(gr => gr[1].join('')).join('\\n')}\n\nPlayed by AI by Bethany Hitch`,\n  url: 'https://dxdt.me/wordle-ai',\n})\n","var map = {\n\t\"./af\": 109,\n\t\"./af.js\": 109,\n\t\"./ar\": 110,\n\t\"./ar-dz\": 111,\n\t\"./ar-dz.js\": 111,\n\t\"./ar-kw\": 112,\n\t\"./ar-kw.js\": 112,\n\t\"./ar-ly\": 113,\n\t\"./ar-ly.js\": 113,\n\t\"./ar-ma\": 114,\n\t\"./ar-ma.js\": 114,\n\t\"./ar-sa\": 115,\n\t\"./ar-sa.js\": 115,\n\t\"./ar-tn\": 116,\n\t\"./ar-tn.js\": 116,\n\t\"./ar.js\": 110,\n\t\"./az\": 117,\n\t\"./az.js\": 117,\n\t\"./be\": 118,\n\t\"./be.js\": 118,\n\t\"./bg\": 119,\n\t\"./bg.js\": 119,\n\t\"./bm\": 120,\n\t\"./bm.js\": 120,\n\t\"./bn\": 121,\n\t\"./bn-bd\": 122,\n\t\"./bn-bd.js\": 122,\n\t\"./bn.js\": 121,\n\t\"./bo\": 123,\n\t\"./bo.js\": 123,\n\t\"./br\": 124,\n\t\"./br.js\": 124,\n\t\"./bs\": 125,\n\t\"./bs.js\": 125,\n\t\"./ca\": 126,\n\t\"./ca.js\": 126,\n\t\"./cs\": 127,\n\t\"./cs.js\": 127,\n\t\"./cv\": 128,\n\t\"./cv.js\": 128,\n\t\"./cy\": 129,\n\t\"./cy.js\": 129,\n\t\"./da\": 130,\n\t\"./da.js\": 130,\n\t\"./de\": 131,\n\t\"./de-at\": 132,\n\t\"./de-at.js\": 132,\n\t\"./de-ch\": 133,\n\t\"./de-ch.js\": 133,\n\t\"./de.js\": 131,\n\t\"./dv\": 134,\n\t\"./dv.js\": 134,\n\t\"./el\": 135,\n\t\"./el.js\": 135,\n\t\"./en-au\": 136,\n\t\"./en-au.js\": 136,\n\t\"./en-ca\": 137,\n\t\"./en-ca.js\": 137,\n\t\"./en-gb\": 138,\n\t\"./en-gb.js\": 138,\n\t\"./en-ie\": 139,\n\t\"./en-ie.js\": 139,\n\t\"./en-il\": 140,\n\t\"./en-il.js\": 140,\n\t\"./en-in\": 141,\n\t\"./en-in.js\": 141,\n\t\"./en-nz\": 142,\n\t\"./en-nz.js\": 142,\n\t\"./en-sg\": 143,\n\t\"./en-sg.js\": 143,\n\t\"./eo\": 144,\n\t\"./eo.js\": 144,\n\t\"./es\": 145,\n\t\"./es-do\": 146,\n\t\"./es-do.js\": 146,\n\t\"./es-mx\": 147,\n\t\"./es-mx.js\": 147,\n\t\"./es-us\": 148,\n\t\"./es-us.js\": 148,\n\t\"./es.js\": 145,\n\t\"./et\": 149,\n\t\"./et.js\": 149,\n\t\"./eu\": 150,\n\t\"./eu.js\": 150,\n\t\"./fa\": 151,\n\t\"./fa.js\": 151,\n\t\"./fi\": 152,\n\t\"./fi.js\": 152,\n\t\"./fil\": 153,\n\t\"./fil.js\": 153,\n\t\"./fo\": 154,\n\t\"./fo.js\": 154,\n\t\"./fr\": 155,\n\t\"./fr-ca\": 156,\n\t\"./fr-ca.js\": 156,\n\t\"./fr-ch\": 157,\n\t\"./fr-ch.js\": 157,\n\t\"./fr.js\": 155,\n\t\"./fy\": 158,\n\t\"./fy.js\": 158,\n\t\"./ga\": 159,\n\t\"./ga.js\": 159,\n\t\"./gd\": 160,\n\t\"./gd.js\": 160,\n\t\"./gl\": 161,\n\t\"./gl.js\": 161,\n\t\"./gom-deva\": 162,\n\t\"./gom-deva.js\": 162,\n\t\"./gom-latn\": 163,\n\t\"./gom-latn.js\": 163,\n\t\"./gu\": 164,\n\t\"./gu.js\": 164,\n\t\"./he\": 165,\n\t\"./he.js\": 165,\n\t\"./hi\": 166,\n\t\"./hi.js\": 166,\n\t\"./hr\": 167,\n\t\"./hr.js\": 167,\n\t\"./hu\": 168,\n\t\"./hu.js\": 168,\n\t\"./hy-am\": 169,\n\t\"./hy-am.js\": 169,\n\t\"./id\": 170,\n\t\"./id.js\": 170,\n\t\"./is\": 171,\n\t\"./is.js\": 171,\n\t\"./it\": 172,\n\t\"./it-ch\": 173,\n\t\"./it-ch.js\": 173,\n\t\"./it.js\": 172,\n\t\"./ja\": 174,\n\t\"./ja.js\": 174,\n\t\"./jv\": 175,\n\t\"./jv.js\": 175,\n\t\"./ka\": 176,\n\t\"./ka.js\": 176,\n\t\"./kk\": 177,\n\t\"./kk.js\": 177,\n\t\"./km\": 178,\n\t\"./km.js\": 178,\n\t\"./kn\": 179,\n\t\"./kn.js\": 179,\n\t\"./ko\": 180,\n\t\"./ko.js\": 180,\n\t\"./ku\": 181,\n\t\"./ku.js\": 181,\n\t\"./ky\": 182,\n\t\"./ky.js\": 182,\n\t\"./lb\": 183,\n\t\"./lb.js\": 183,\n\t\"./lo\": 184,\n\t\"./lo.js\": 184,\n\t\"./lt\": 185,\n\t\"./lt.js\": 185,\n\t\"./lv\": 186,\n\t\"./lv.js\": 186,\n\t\"./me\": 187,\n\t\"./me.js\": 187,\n\t\"./mi\": 188,\n\t\"./mi.js\": 188,\n\t\"./mk\": 189,\n\t\"./mk.js\": 189,\n\t\"./ml\": 190,\n\t\"./ml.js\": 190,\n\t\"./mn\": 191,\n\t\"./mn.js\": 191,\n\t\"./mr\": 192,\n\t\"./mr.js\": 192,\n\t\"./ms\": 193,\n\t\"./ms-my\": 194,\n\t\"./ms-my.js\": 194,\n\t\"./ms.js\": 193,\n\t\"./mt\": 195,\n\t\"./mt.js\": 195,\n\t\"./my\": 196,\n\t\"./my.js\": 196,\n\t\"./nb\": 197,\n\t\"./nb.js\": 197,\n\t\"./ne\": 198,\n\t\"./ne.js\": 198,\n\t\"./nl\": 199,\n\t\"./nl-be\": 200,\n\t\"./nl-be.js\": 200,\n\t\"./nl.js\": 199,\n\t\"./nn\": 201,\n\t\"./nn.js\": 201,\n\t\"./oc-lnc\": 202,\n\t\"./oc-lnc.js\": 202,\n\t\"./pa-in\": 203,\n\t\"./pa-in.js\": 203,\n\t\"./pl\": 204,\n\t\"./pl.js\": 204,\n\t\"./pt\": 205,\n\t\"./pt-br\": 206,\n\t\"./pt-br.js\": 206,\n\t\"./pt.js\": 205,\n\t\"./ro\": 207,\n\t\"./ro.js\": 207,\n\t\"./ru\": 208,\n\t\"./ru.js\": 208,\n\t\"./sd\": 209,\n\t\"./sd.js\": 209,\n\t\"./se\": 210,\n\t\"./se.js\": 210,\n\t\"./si\": 211,\n\t\"./si.js\": 211,\n\t\"./sk\": 212,\n\t\"./sk.js\": 212,\n\t\"./sl\": 213,\n\t\"./sl.js\": 213,\n\t\"./sq\": 214,\n\t\"./sq.js\": 214,\n\t\"./sr\": 215,\n\t\"./sr-cyrl\": 216,\n\t\"./sr-cyrl.js\": 216,\n\t\"./sr.js\": 215,\n\t\"./ss\": 217,\n\t\"./ss.js\": 217,\n\t\"./sv\": 218,\n\t\"./sv.js\": 218,\n\t\"./sw\": 219,\n\t\"./sw.js\": 219,\n\t\"./ta\": 220,\n\t\"./ta.js\": 220,\n\t\"./te\": 221,\n\t\"./te.js\": 221,\n\t\"./tet\": 222,\n\t\"./tet.js\": 222,\n\t\"./tg\": 223,\n\t\"./tg.js\": 223,\n\t\"./th\": 224,\n\t\"./th.js\": 224,\n\t\"./tk\": 225,\n\t\"./tk.js\": 225,\n\t\"./tl-ph\": 226,\n\t\"./tl-ph.js\": 226,\n\t\"./tlh\": 227,\n\t\"./tlh.js\": 227,\n\t\"./tr\": 228,\n\t\"./tr.js\": 228,\n\t\"./tzl\": 229,\n\t\"./tzl.js\": 229,\n\t\"./tzm\": 230,\n\t\"./tzm-latn\": 231,\n\t\"./tzm-latn.js\": 231,\n\t\"./tzm.js\": 230,\n\t\"./ug-cn\": 232,\n\t\"./ug-cn.js\": 232,\n\t\"./uk\": 233,\n\t\"./uk.js\": 233,\n\t\"./ur\": 234,\n\t\"./ur.js\": 234,\n\t\"./uz\": 235,\n\t\"./uz-latn\": 236,\n\t\"./uz-latn.js\": 236,\n\t\"./uz.js\": 235,\n\t\"./vi\": 237,\n\t\"./vi.js\": 237,\n\t\"./x-pseudo\": 238,\n\t\"./x-pseudo.js\": 238,\n\t\"./yo\": 239,\n\t\"./yo.js\": 239,\n\t\"./zh-cn\": 240,\n\t\"./zh-cn.js\": 240,\n\t\"./zh-hk\": 241,\n\t\"./zh-hk.js\": 241,\n\t\"./zh-mo\": 242,\n\t\"./zh-mo.js\": 242,\n\t\"./zh-tw\": 243,\n\t\"./zh-tw.js\": 243\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 292;","export { default } from './word-input.jsx'","import React, { \n  useEffect, \n  useRef, \n  useState,\n  useCallback,\n  useContext,\n} from 'react'\nimport styled from '@emotion/styled'\nimport { \n  Autocomplete, \n  Input as MUIInput\n} from '@mui/material'\nimport moment from 'moment'\nimport _ from 'lodash'\nimport Cookies from 'js-cookie'\nimport useCurrentPuzzleWord\n  from '../../hooks/useCurrentPuzzleWord'\nimport Button from './button.jsx'\nimport wordContext from '../../contexts/word-context'\n\nconst UNPLAY_SETTINGS = [\n  'decisiveThreshold',\n  'random',\n  'doShuffle',\n  'anyFirstWord',\n  'forceHardMode',\n  'excludePrevious',\n  'wholeDictionary',\n  'tryToLose',\n  'commonDupes',\n]\n\nconst lastPlay = moment(\n  Cookies.get('lastPlay') || 0\n).endOf('day')\n\nconst Container = styled.div`\n  width: 100%;\n  display: ${p =>\n    p.hasResult && p.hideText ? 'none' : 'flex'\n  };\n  align-items: center;\n  flex-direction: column;\n`\n\nconst platform =\n  navigator.userAgent.platform || navigator.platform\n\nconst Input = styled(MUIInput, {\n  shouldForwardProp: p => p !== 'isPuzzleWord'\n})`\n  padding-left: ${platform === 'Win32' ? 9 : 4}px;\n  font-family: 'menlo-regular', consolas, monospace;\n  font-size: 30px;\n  width: 100px;\n\n  ${p => p.isPuzzleWord && { fontWeight: 800 }}\n`\n\nconst useAutocomplete = false;\n\nconst setCookies = word => {\n  Cookies.set('word', word)\n  Cookies.set('lastPlay', Date.now())\n}\n\nconst WordInput = ({\n  onSubmit,\n  settings,\n}) => {\n  const {\n    puzzleWords,\n    allWords,\n    results,\n  } = useContext(wordContext)\n  \n  const [word, setWord] = useState('')\n  /** @type {string|false} */\n  const [played, setPlayed] = useState(false)\n  const inputRef = useRef()\n  const currentPuzzle = useCurrentPuzzleWord(puzzleWords)\n  const playedToday = useRef(false)\n  \n  const runCurrent = () => {\n    if (!currentPuzzle) {\n      return\n    }\n    \n    setPlayed(currentPuzzle)\n    \n    setWord(currentPuzzle)\n    setTimeout(() => {\n      setCookies(currentPuzzle)\n      onSubmit({\n        word: currentPuzzle,\n        isPuzzleWord: true,\n      })\n    })\n  }\n  \n  useEffect(\n    () => { setPlayed(false) }, \n    [\n      currentPuzzle,\n      ...Object.values(\n        _.pick(settings, ...UNPLAY_SETTINGS)\n      ),\n    ]\n  )\n  \n  useEffect(\n    () => { playedToday.current = false },\n    [currentPuzzle]\n  )\n\n  useEffect(() => {\n    if (\n      puzzleWords.length &&\n      !playedToday.current &&\n      settings.autoplay\n    ) {\n      setPlayed(currentPuzzle)\n      playedToday.current = true\n\n      const today = moment().endOf('day')\n      if (today.diff(lastPlay, 'days') >= 1) {\n        runCurrent()\n      } else {\n        setWord(Cookies.get('word') || '')\n      }\n    }\n  })\n\n  if (!allWords.length) {\n    return null\n  }\n\n  const valid =\n    word.length === 5 && allWords.includes(word)\n  const isPuzzleWord =\n    valid && puzzleWords.includes(word)\n\n  const handleChange = e => {\n    const val = e.target.value.trim()\n    setWord(val.slice(0, 5).toUpperCase())\n  }\n\n  const handleKeyDown = e => {\n    if (valid && ['Return', 'Enter'].includes(e.key)) {\n      e.target.select()\n      handleSubmit()\n    } else if (!word && e.key === 'Enter') {\n      runCurrent()\n    }\n  }\n\n  const handleSubmit = () => {\n    setCookies(word)\n    setPlayed(word)\n    onSubmit({ word, isPuzzleWord })\n  }\n  \n  const handleClear = () => {\n    setWord('')\n    setTimeout(() => \n      inputRef.current.querySelector('input').focus())\n  }\n\n  const input = useAutocomplete\n    ? <Autocomplete\n        autoComplete\n        autoHighlight\n        options={\n          puzzleWords.slice(0, CURRENT_PUZZLE_NUMBER)\n        }\n        onChange={handleChange}\n        onFocus={e => e.target.select()}\n        value={word}\n        inputValue={word}\n        onKeyDown={handleKeyDown}\n        freeSolo\n        renderInput={({ inputProps }) =>\n          <Input\n            maxLength={5}\n            isPuzzleWord={isPuzzleWord}\n            value={word}\n            {...inputProps}\n          />\n        }\n      />\n    : <Input\n        ref={inputRef}\n        maxLength={5}\n        isPuzzleWord={isPuzzleWord}\n        onChange={handleChange}\n        onFocus={e => e.target.select()}\n        value={word}\n        onKeyDown={handleKeyDown}\n      />\n      \n  const hasResult = !!results.guessResults.length\n  \n  return (\n    <Container hasResult={hasResult} {...settings}>\n      {input}\n      <Button\n        word={word}\n        onClear={handleClear}\n        onSetToCurrent={runCurrent}\n        valid={valid}\n        onSubmit={handleSubmit}\n        playedWord={played}\n      />\n    </Container>\n  )\n}\n\nexport default WordInput","import moment from 'moment'\nimport { useState } from 'react'\nimport { getCurrentPuzzleNumber } from '../helpers'\nimport useTimedEffect from './useTimedEffect'\n\nconst useCurrentPuzzleWord = puzzleWords => {\n  const [puzzleNum, setPuzzleNum] = \n    useState(getCurrentPuzzleNumber())\n  \n  useTimedEffect(() =>\n    setPuzzleNum(getCurrentPuzzleNumber()),\n    moment().startOf('day').add(1, 'day'),\n  )\n  \n  return puzzleWords?.[puzzleNum]\n}\n\nexport default useCurrentPuzzleWord","import { useEffect } from 'react'\nimport moment from 'moment'\n\nconst useTimedEffect = \n  (cb, time, deps) => {\n    useEffect(() => {\n      const handle = setTimeout(\n        cb,\n        moment(time).diff(moment(), 'ms')\n      )\n      \n      return () => clearTimeout(handle)\n    }, deps)\n  }\n\nexport default useTimedEffect","import React from 'react';\nimport styled from '@emotion/styled';\nimport { Button as MUIButton } from '@mui/material';\nimport moment from 'moment';\n\nconst StyledButton = styled(MUIButton)`\n  width: 150px;\n`\n\nconst Button = ({\n  word,\n  valid,\n  onSubmit,\n  onSetToCurrent,\n  onClear,\n  playedWord,\n}) =>\n  !word ?\n    <StyledButton onClick={onSetToCurrent}>\n      Today's word\n    </StyledButton> :\n  !valid || playedWord === word ?\n    <StyledButton onClick={onClear}>Clear</StyledButton> : \n  <StyledButton onClick={onSubmit}>Go</StyledButton>\n\nexport default Button","export { default } from './results.jsx'","import React, { Fragment, useContext } from 'react';\nimport styled from '@emotion/styled';\nimport { FailedRow } from './failed-row.jsx';\nimport { ResultRow } from './result-row.jsx';\nimport { StatsRow } from './stats-row';\nimport { getPuzzleNumber } from '../../helpers';\nimport wordContext from '../../contexts/word-context'\n\nconst ResultContainer = styled('div')`\n  display: flex;\n  flex-direction: column;\n`\n\nconst Results = ({ settings }) => {\n  const { results } = useContext(wordContext)\n  const hasResult = !!results.guessResults.length\n\n  return <ResultContainer>\n    <Header settings={settings} />\n    {results.guessResults.map(\n      ([guess, result, wordsLeft, remainingWords], i) =>\n        <Fragment key={guess}>\n          {i === MAX_GUESSES && <FailedRow />}\n          <ResultRow\n            guess={guess}\n            result={result}\n            settings={settings}\n            wordsLeft={wordsLeft}\n            remainingWords={remainingWords}\n          />\n        </Fragment>\n    )}\n    <StatsRow {...results} settings={settings} />\n  </ResultContainer>\n}\n\nconst Header = styled(({\n  settings,\n  className,\n}) => {\n  const {\n    results,\n    puzzleNumber,\n  } = useContext(wordContext)\n  \n  return !results.guessResults.length\n    ? null\n    : <h1 className={className}>\n        {puzzleNumber != null\n          ? `Wordle ${puzzleNumber}`\n          : 'Non-Wordle puzzle'\n        }\n      </h1>\n})`\n  font-size: 1.5rem;\n  font-weight: 400;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport default Results","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Row = styled('div')`\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  font-size: 26px;\n  height: 40px;\n  color: white;\n  background-color: black;\n  background:\n    linear-gradient(to bottom, red, black);\n  font-family: sans-serif;\n  flex-grow: 0;\n  width: ${54 * 5 - 4}px;\n  margin-left: auto;\n  margin-right: auto;\n  \n  & > span {\n    margin-top: auto;\n    margin-bottom: auto;\n  }\n`\n\nexport const FailedRow = () =>\n  <Row>\n    <span>failed</span>\n    <span>☠️</span>\n  </Row>","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/react'\nimport { WordsLeftTooltip }\n  from './words-left-tooltip.jsx'\n\nconst hiddenText = css`\n  color: transparent;\n  user-select: none;\n`\n\nconst WordsLeftContainer = styled('div')`\n  display: ${p =>\n    p.showWordsLeft ? 'inline-flex' : 'none'\n  };\n  direction: row;\n  color: gray;\n  font-size: 20px;\n  justify-content: center;\n  \n  & > div {\n    position: relative;\n    max-width: min-content;\n    height: min-content;\n    white-space: nowrap;\n  }\n`\n\nconst ArrowContainer = styled('div')`\n  position: absolute;\n  right: 0;\n  top: 100%;\n  transform: translate(100%, -70%);\n  \n  & > * {\n    margin-right: unset;\n  }\n`\n\nconst ResultRowContainer = styled('div')`\n  display: inline-flex;\n  flex-direction: row;\n  justify-content: center;\n  font-size: 40px;\n  font-family: 'menlo-regular', consolas, monospace;\n  color: white;\n  \n  ${p => p.hideText && hiddenText}\n`\n\nexport const ResultRow = ({\n  guess,\n  result,\n  wordsLeft,\n  remainingWords,\n  settings\n}) =>\n  <>\n    <ResultRowContainer {...settings}>\n      {result.map((r, i) =>\n        <ResultItem key={guess + i} result={r}>\n          <span>{guess[i]}</span>\n        </ResultItem>\n      )}\n    </ResultRowContainer>\n    {wordsLeft != null &&\n      <WordsLeftTooltip\n        placement=\"bottom\"\n        words={remainingWords}\n      >{\n        arrow =>\n          <WordsLeftContainer {...settings}>\n            <div>\n              {wordsLeft}\n              {wordsLeft === 1 ? ' word ' : ' words '}\n              left\n              <ArrowContainer>{arrow}</ArrowContainer>\n            </div>\n          </WordsLeftContainer>\n      }</WordsLeftTooltip>\n    }\n  </>\n\nconst bgColors = {\n  [GREEN]: '#67CE66',\n  [GRAY]: '#8E8E92',\n  [YELLOW]: '#F8D74A',\n}\n\nconst ResultItem = styled('span', {\n  shouldForwardProp: p => p !== 'result'\n})`\n  height: 50px;\n  width: 50px;\n  background-color: ${({ result }) => bgColors[result]};\n  margin: 2px;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n  \n  & > span {\n    line-height: 1;\n    margin: auto;\n  }\n`","export * from './stats-row.jsx'","import React from 'react'\nimport styled from '@emotion/styled'\nimport CheckIcon from '@mui/icons-material/Check'\nimport ClearIcon from '@mui/icons-material/Clear'\nimport { Cell } from './cell'\nimport { WordsLeftCell } from './words-left-cell.jsx'\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-content: center;\n  margin-top: 16px;\n`\n\nconst HardModeIcon = styled(({ hardMode, className }) =>\n  hardMode \n    ? <CheckIcon className={className} />\n    : <ClearIcon className={className} />\n)`\n  height: 36px;\n  width: 36px;\n  display: block;\n`\n\nexport const StatsRow = ({\n  guessResults,\n  lucky,\n  wordsLeft,\n  remainingWords,\n  hardMode,\n  settings,\n}) =>\n  !guessResults.length\n    ? null\n    : <Row>\n        <Cell\n          color={\n            guessResults.length <= MAX_GUESSES\n              ? '#67CE66'\n              : 'red'\n          }\n        >\n          <span>{guessResults.length}</span>\n          <span>\n            {guessResults.length === 1\n              ? 'guess'\n              : 'guesses'\n            }\n          </span>\n        </Cell>\n        <HardModeCell\n          hardMode={hardMode}\n          settings={settings}\n          guessResults={guessResults}\n        />\n        <LuckyCell \n          lucky={lucky}\n          settings={settings}\n        />\n        <WordsLeftCell \n          wordsLeft={wordsLeft}\n          remainingWords={remainingWords}\n        />\n      </Row>\n      \nconst HardModeCell = ({\n  hardMode, \n  guessResults, \n  settings\n}) =>\n  guessResults.length <= MAX_GUESSES &&\n  !settings.anyFirstWord\n    ? <Cell color={hardMode ? '#67CE66' : 'red'}>\n        <HardModeIcon hardMode={hardMode} />\n        <span>hard mode</span>\n      </Cell>\n    : null\n\nconst LuckyCell = ({ lucky, settings }) =>\n  !settings.random\n    ? <Cell color={lucky ? '#F1A33C' : '#3B81F6'}>\n        <span>{lucky ? 'Yes' : 'No'}</span>\n        <span>luck needed</span>\n      </Cell>\n    : null","import React, { useState } from 'react'\nimport { WordsLeftTooltip }\n  from '../words-left-tooltip.jsx'\nimport { Cell } from './cell'\n\nexport const WordsLeftCell = ({ \n  wordsLeft,\n  remainingWords,\n}) => {\n  const cell = <Cell \n    color=\"#3B81F6\"\n    onClick={() => setOpen(!!wordsLeft)}\n  >\n    <span>{wordsLeft}</span>\n    <span>words left</span>\n  </Cell>\n  \n  return !!wordsLeft\n    ? <WordsLeftTooltip \n        placement=\"bottom-end\"\n        words={remainingWords}\n      >\n        {cell}\n      </WordsLeftTooltip>\n    : cell\n}","import React, { useState, useEffect } from 'react'\nimport { getLetterCounts } from '../ai/helpers'\n\nconst getList = url =>\n  fetch(url)\n    .then(res => res.text())\n    .then(txt => txt.toUpperCase().split('\\n'))\n\nconst useDictionary = () => {\n  const [val, setVal] = useState([[], []])\n\n  useEffect(() => {\n    Promise.all([\n      getList('./data/puzzle-words.txt'),\n      getList('./data/all-words.txt'),\n    ])\n      .then(([p, a]) => \n        [p, Array.from(new Set([...p, ...a]))]\n      )\n      .then(value => setVal(value))\n      .catch(e => console.error(e.message))\n  }, [])\n  \n  useEffect(() => {\n    const lowLetterWords = val[1]\n      .map(w => [w, new Set(w).size])\n      .sort((a, b) => a[1] - b[1])\n      .filter((x, _, a) => x[1] === a[0][1])\n      .map(x => x[0])\n      \n    l(lowLetterWords)\n      \n    // const letterPosCounts = newFilledArray(5, () => [])\n    // val[0].forEach(w => w.forEach((c, i) =>\n    //   letterPosCounts[i][c] = \n    //     (letterPosCounts[i][c] || 0) + 1\n    // ))\n\n    // const puzzleWordCounts = val[0]\n    //   .map(x => [\n    //     x, \n    //     getLetterCounts(x),\n    //     x.map((c, i) => )\n    //   ])\n      \n  }, [val])\n  \n  return val\n}\n\nexport default useDictionary","import { useState, useCallback } from 'react'\nimport _ from 'lodash'\n//import Cookies from 'js-cookie'\n\nconst getInitialSettings = () => ({\n  hideText: false,\n  decisiveThreshold: 2,\n  random: false,\n  showWordsLeft: false,\n  doShuffle: true,\n  anyFirstWord: false,\n  forceHardMode: false,\n  autoplay: true,\n  excludePrevious: false,\n  wholeDictionary: false,\n  tryToLose: false,\n  commonDupes: false,\n  prioritizeUniqueLetters: true,\n  ...JSON.parse(localStorage.settings || '{}'),\n})\n\nconst useSettings = () => {\n  const [settings, _setSettings] = \n    useState(getInitialSettings())\n  \n  const setSettings = useCallback(s => {\n    const next = { ...settings, ...s }\n    \n    if (!_.isEqual(settings, next)) {\n      //Cookies.set('settings', next)\n      localStorage.setItem(\n        'settings',\n        JSON.stringify(next)\n      )\n      _setSettings(next)\n    }\n  }, [settings])\n  \n  return [settings, setSettings]\n}\n\nexport default useSettings","import React, { useState } from 'react'\nimport {\n  Tooltip as MuiTooltip,\n  IconButton,\n  ClickAwayListener,\n} from '@mui/material'\nimport styled from '@emotion/styled'\nimport InfoIcon from '@mui/icons-material/InfoOutlined'\n\nconst Tooltip = styled(MuiTooltip)`\n  & .MuiTooltip-popper {\n    z-index: 1300;\n  }\n`\n\nconst IconTooltip = ({ \n  icon = <InfoIcon />, \n  children, \n  ...props \n}) => {\n  const [open, setOpen] = useState(false)\n  const title = \n    <ClickAwayListener\n      onClickAway={() => setOpen(false)}\n    >\n      <div>{children}</div>\n    </ClickAwayListener>\n    \n  return (\n    <Tooltip \n      title={title} \n      open={open}\n      arrow\n      {...props}\n    >\n      <IconButton onClick={() => setOpen(s => !s)}>\n        {icon}\n      </IconButton>\n    </Tooltip>\n  )\n}\n\nexport default IconTooltip","const moment = require('moment')\n\nconst _WORDLE_DAY_0 = moment('2022-02-02')\n  .subtract(228, 'days')\n\nconst getPuzzleNumber = (puzzleWords, word) => {\n  const puzzleWordIdx = puzzleWords.indexOf(word)\n\n  if (puzzleWordIdx === -1) {\n    return null\n  }\n\n  const puzzleDay =\n    _WORDLE_DAY_0.clone().add(puzzleWordIdx, 'days')\n  const pastPuzzle = moment().endOf('day') >= puzzleDay\n\n  return pastPuzzle && puzzleWordIdx\n}\n\nconst getCurrentPuzzleNumber = () =>\n  moment().endOf('day').diff(_WORDLE_DAY_0, 'days')\n\nmodule.exports = {\n  get WORDLE_DAY_0() {\n    return _WORDLE_DAY_0.clone()\n  },\n  getCurrentPuzzleNumber,\n  getPuzzleNumber,\n}","import { createContext } from 'react'\n\nconst wordContext = createContext({\n  word: '',\n  puzzleWords: [],\n  allWords: [],\n  puzzleNumber: null,\n  results: {\n    guessResults: []\n  }\n})\n\nexport default wordContext","export const getLetterCounts = w => {\n  const counts = {}\n  w.forEach(c => counts[c] = (counts[c] || 0) + 1)\n  return counts\n}\n\nexport const tryWord = (todaysWord, guess) => {\n  if (guess === todaysWord) {\n    return newFilledArray(\n      todaysWord.length,\n      () => GREEN\n    )\n  }\n  \n  const counts = getLetterCounts(todaysWord)\n  \n  return guess\n    .map((c, i) => {\n      if (c === todaysWord[i]) {\n        counts[c]--\n        return GREEN\n      } else {\n        return c\n      }\n    })\n    .map((c, i) => {\n      if (c === GREEN) {\n        return c\n      }\n      \n      if (counts[c]) {\n        counts[c]--\n        return YELLOW\n      }\n      \n      return GRAY\n    })\n}\n\nconst noop = () => {}\nnoop.x = () => {}\nexport const printMethods = print => print\n  ? { l, lj, ljs, lje, ljn }\n  : Object.mapObject(\n      printMethods(true), \n      ([k]) => [k, noop]\n    )\n\nexport const fArr = x => Array.from(x)\nexport const newFilledArray = (n, cb = () => null) =>\n  new Array(n).fill().map(cb)\n"],"sourceRoot":""}